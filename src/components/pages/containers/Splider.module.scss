@import "../../../css/mixins.scss";

@mixin vars() {
  --wrapper-padding-bottom: var(--pad-5);
  --ratio: 4/3;
  --ratio-flip: 3/4;
  --grid-gap: 5px;
  @media (min-width: $tablet) {
    --wrapper-padding-bottom: var(--pad-6);
    --ratio: 16/9;
    --ratio-flip: 9/16;
    --grid-gap: 10px;
  }

  @media (min-width: $laptop) {
    --wrapper-padding-bottom: var(--pad-7);
    --ratio: unset;
    --ratio-flip: unset;
    --grid-gap: 10px;
  }

  @media (min-width: $desktop) {
    --wrapper-padding-bottom: var(--pad-8);
    --grid-gap: 15px;
  }
}

.wrapper {
  @include vars;
  @include flexColumn;

  width: 100%;
  height: 100%;
  max-width: 100vw;
  position: relative;

  .ui {
    @include absoluteFill;

    height: auto;
    aspect-ratio: var(--ratio);
    pointer-events: none;
    .progressBar {
      @include flex(flex-start);

      position: absolute;
      bottom: 5%;
      left: 20%;
      right: 20%;
      height: 8px;
      background-color: var(--white);
      border-radius: 4px;
      overflow: hidden;
      z-index: 4;
      .progress {
        height: 100%;
        background: var(--yellow);
      }
    }

    .customArrows {
      @include flex(flex-start, flex-end);

      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 3;

      > * {
        cursor: pointer;
        pointer-events: all;
        padding-bottom: var(--pad-8) !important;
        transition: 200ms;
      }

      .prevArrow {
        margin-left: calc(100% / 3);
        padding: var(--pad-3) var(--pad-5);
        transform: translate(-100%, var(--pad-3));
        background: var(--white);
      }

      .nextArrow {
        padding: var(--pad-3) var(--pad-5);

        transform: translate(calc(-100% - 1px), var(--pad-3));
        background: var(--black);
        // border-radius: 0 60px 60px 0;
      }
    }
  }

  .content {
    @include flexColumn(stretch, stretch);
    > img {
      height: calc(100vw * var(--ratio-flip)) !important;
    }
    .imgGridWrapper {
      @include flex;
      width: 100%;
      height: calc(100vw * var(--ratio-flip)) !important;
      overflow: hidden;

      .imgGrid {
        background-color: var(--yellow);
        display: grid;
        gap: var(--grid-gap);
        width: 100%;
        aspect-ratio: 1;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(3, 33.3%);
        $deg: -20deg;
        transform: rotateZ($deg) scale(calc(1.3 * cos($deg)));
        .grayscale {
          filter: grayscale(1) contrast(1.2);
        }
        > * {
          box-shadow: 0px 0px 6px 0px rgba(0, 0, 0, 0.3);
          border-radius: 4px;
        }
      }
    }
  }

  .container {
    position: relative;
    padding: 0;
    height: 100%;
    width: 100%;
    .track {
      height: 100%;
    }
  }

  @media (min-width: $laptop) {
    .ui {
      height: 100%;
    }
    .content {
      flex-direction: row !important;
      flex: 1;
      min-width: 100%;
      > img {
        height: 100% !important;
        flex: 1;
      }
      .imgGridWrapper {
        flex: 1;
        height: 100% !important;
      }
    }
  }
}
